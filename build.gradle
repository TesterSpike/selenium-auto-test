plugins {
    id 'java'
}

group 'net.ika-consulting'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.13

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
    systemProperty "env", findProperty("env") ?: "test"
}

ext {
    junitVersion = '5.6.0'
    seleniumVersion = '3.141.59'
    webdriverManagerVersion = '3.8.1'
    slf4jVersion = '1.7.30'
    cucumberVersion = '5.6.0'
}

task cucumber() {
    //cmd line 'gradlew cucumber' to run all tests. Cucumber default config included in case no runner class
    //FIXME config doesn't find the steps for the feature files
    dependsOn assemble, compileTestJava, test
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'gradle.cucumber', 'classpath:features']
        }
    }
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    //Used for Cucumber Runner
    testImplementation("org.junit.vintage:junit-vintage-engine:$junitVersion")

    // Downloads the correct webdriver binary for the browser and version used in testing
    implementation("io.github.bonigarcia:webdrivermanager:$webdriverManagerVersion")

    //SLF4J
    //Add to remove default error message from Selenium if no logging framework is used
    //testImplementation("org.slf4j:slf4j-nop:$slf4jVersion")
    implementation("org.slf4j:slf4j-api:$slf4jVersion")
    implementation("org.slf4j:slf4j-simple:$slf4jVersion")

    //Selenium
    implementation("org.seleniumhq.selenium:selenium-java:$seleniumVersion")

    //Cucumber
    testImplementation "io.cucumber:cucumber-java:$cucumberVersion"
    testImplementation "io.cucumber:cucumber-junit:$cucumberVersion"
}
